{"version":3,"sources":["Components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["Todos","useState","inputData","setInputData","localStorage","getItem","JSON","parse","items","setItems","useEffect","setItem","stringify","className","IconButton","InputBase","placeholder","value","onChange","e","target","onKeyPress","event","key","aria-label","onClick","color","map","element","ind","Chip","icon","label","onDelete","id","console","log","updateditems","filter","deleteItem","variant","document","body","style","overflow","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uTAQe,SAASA,IAEtB,IAF8B,EAWIC,mBAAS,IAXb,mBAWvBC,EAXuB,KAWZC,EAXY,OAYJF,mBATbG,aAAaC,QAAQ,SAEvBC,KAAKC,MAAMH,aAAaC,QAAQ,UAEhC,IAPmB,mBAYvBG,EAZuB,KAYhBC,EAZgB,KA8C9B,OAJAC,qBAAU,WACRN,aAAaO,QAAQ,QAASL,KAAKM,UAAUJ,MAC5C,CAACA,IAGF,mCACE,sBAAKK,UAAU,YAAf,UACE,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,YAAf,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAwBD,UAAU,UAGpC,cAACE,EAAA,EAAD,CACEF,UAAU,YACVG,YAAY,kBACZC,MAAOf,EACPgB,SAAU,SAACC,GAAD,OAAOhB,EAAagB,EAAEC,OAAOH,QACvCI,WA9CW,SAACC,GACJ,UAAdA,EAAMC,KACU,KAAdrB,IACFO,EAAS,GAAD,mBAAKD,GAAL,CAAYN,KACpBC,EAAa,QA4CT,cAACW,EAAA,EAAD,CAAYU,aAAW,OAAvB,SACE,cAAC,IAAD,CAASX,UAAU,MAAMY,QAxCrB,WACI,KAAdvB,IACFO,EAAS,GAAD,mBAAKD,GAAL,CAAYN,KACpBC,EAAa,aAwCT,cAACW,EAAA,EAAD,CACEY,MAAM,YACNF,aAAW,OACXC,QAAS,WA/BjBhB,EAAS,KA4BH,SAKE,cAAC,IAAD,CAAmBI,UAAU,mBAGjC,qBAAKA,UAAU,aAAf,SACGL,EAAMmB,KAAI,SAACC,EAASC,GACnB,OACE,qBAAKhB,UAAU,OAAf,SACE,cAACiB,EAAA,EAAD,CACEC,KAAM,cAAC,IAAD,IACNC,MAAOJ,EACPK,SAAU,kBApDP,SAACC,GAClBC,QAAQC,IAAIF,GACZ,IAAMG,EAAe7B,EAAM8B,QAAO,SAACV,EAASC,GAC1C,OAAOA,IAAQK,KAGjBzB,EAAS4B,GA8CqBE,CAAWV,IAC3BH,MAAM,UACNc,QAAQ,aANeX,aClFzCY,SAASC,KAAKC,MAAMC,SAAW,OAShBC,MARf,WACE,OACE,qBAAKhC,UAAU,MAAf,SACE,cAACb,EAAD,OCKS8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhB,SAASiB,eAAe,SAM1BZ,M","file":"static/js/main.0cb162ca.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ScatterPlotRoundedIcon from \"@material-ui/icons/ScatterPlotRounded\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport \"../App.css\";\r\nimport { InputBase, Chip } from \"@material-ui/core\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport default function Todos() {\r\n  //get data from local\r\n  const getLocalItems = () => {\r\n    let list = localStorage.getItem(\"lists\");\r\n    if (list) {\r\n      return JSON.parse(localStorage.getItem(\"lists\"));\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const [inputData, setInputData] = useState(\"\");\r\n  const [items, setItems] = useState(getLocalItems());\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      if (inputData !== \"\") {\r\n        setItems([...items, inputData]);\r\n        setInputData(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const addItem = () => {\r\n    if (inputData !== \"\") {\r\n      setItems([...items, inputData]);\r\n      setInputData(\"\");\r\n    }\r\n  };\r\n  const deleteItem = (id) => {\r\n    console.log(id);\r\n    const updateditems = items.filter((element, ind) => {\r\n      return ind !== id;\r\n    });\r\n\r\n    setItems(updateditems);\r\n  };\r\n  const deleteAll = () => {\r\n    setItems([]);\r\n  };\r\n\r\n  //add data to local storage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"lists\", JSON.stringify(items));\r\n  }, [items]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"input\">\r\n          <div className=\"textfield\">\r\n            <IconButton>\r\n              <ScatterPlotRoundedIcon className=\"add\" />\r\n            </IconButton>\r\n\r\n            <InputBase\r\n              className=\"inputbase\"\r\n              placeholder=\"write todo here\"\r\n              value={inputData}\r\n              onChange={(e) => setInputData(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n            />\r\n            <IconButton aria-label=\"menu\">\r\n              <AddIcon className=\"add\" onClick={addItem} />\r\n            </IconButton>\r\n          </div>\r\n          <IconButton\r\n            color=\"secondary\"\r\n            aria-label=\"menu\"\r\n            onClick={() => deleteAll()}\r\n          >\r\n            <DeleteOutlineIcon className=\"deleteAll\" />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"itemHolder\">\r\n          {items.map((element, ind) => {\r\n            return (\r\n              <div className=\"item\" key={ind}>\r\n                <Chip\r\n                  icon={<ScatterPlotRoundedIcon />}\r\n                  label={element}\r\n                  onDelete={() => deleteItem(ind)}\r\n                  color=\"primary\"\r\n                  variant=\"default\"\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Todos from \"./Components/Todos\";\n\ndocument.body.style.overflow = \"auto\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todos />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}